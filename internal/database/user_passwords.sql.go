// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: user_passwords.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createPassword = `-- name: CreatePassword :one
INSERT INTO user_passwords (id, password)
VALUES ($1, $2)
RETURNING id, password
`

type CreatePasswordParams struct {
	ID       uuid.UUID
	Password string
}

func (q *Queries) CreatePassword(ctx context.Context, arg CreatePasswordParams) (UserPassword, error) {
	row := q.db.QueryRowContext(ctx, createPassword, arg.ID, arg.Password)
	var i UserPassword
	err := row.Scan(&i.ID, &i.Password)
	return i, err
}

const getUserDetails = `-- name: GetUserDetails :one
SELECT users.id, username, password FROM users NATURAL JOIN user_passwords
WHERE username=$1
`

type GetUserDetailsRow struct {
	ID       uuid.UUID
	Username string
	Password string
}

func (q *Queries) GetUserDetails(ctx context.Context, username string) (GetUserDetailsRow, error) {
	row := q.db.QueryRowContext(ctx, getUserDetails, username)
	var i GetUserDetailsRow
	err := row.Scan(&i.ID, &i.Username, &i.Password)
	return i, err
}
