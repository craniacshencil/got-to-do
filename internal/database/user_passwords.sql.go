// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: user_passwords.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createPassword = `-- name: CreatePassword :one
INSERT INTO user_passwords (id, password)
VALUES ($1, $2)
RETURNING id, password
`

type CreatePasswordParams struct {
	ID       uuid.UUID
	Password string
}

func (q *Queries) CreatePassword(ctx context.Context, arg CreatePasswordParams) (UserPassword, error) {
	row := q.db.QueryRowContext(ctx, createPassword, arg.ID, arg.Password)
	var i UserPassword
	err := row.Scan(&i.ID, &i.Password)
	return i, err
}

const getUsernameAndPassword = `-- name: GetUsernameAndPassword :one
SELECT username, password FROM users NATURAL JOIN user_passwords
WHERE username=$1
`

type GetUsernameAndPasswordRow struct {
	Username string
	Password string
}

func (q *Queries) GetUsernameAndPassword(ctx context.Context, username string) (GetUsernameAndPasswordRow, error) {
	row := q.db.QueryRowContext(ctx, getUsernameAndPassword, username)
	var i GetUsernameAndPasswordRow
	err := row.Scan(&i.Username, &i.Password)
	return i, err
}
